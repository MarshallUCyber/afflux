.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "AFFLUX" "1" "April 23, 2023" "Afflux Manual" ""
.hy
.SH NAME
.PP
afflux - AFF4 logical imager
.SH SYNOPSIS
.PP
afflux [-hvrx] [-t DIRECTORY] [-A] [-e PASSWORD] [-o OUTPUT_FILE] [-m
AFF4_IMAGE] [-p PLUGIN_NAME] [-x AFF4_IMAGE] [PLUGIN_OPTIONS]
.SH DESCRIPTION
.PP
Afflux is an AFF4 logical imager.
The goal of the tool is to logically image modern devices when a
physical image may not be possible.
Afflux supports several optional arguments no matter which plugin is
selected.
These are shown with \[lq]afflux -h\[rq] and are also shown with each
plugin\[cq]s \[lq]-h\[rq] argument.
.SH OPTIONS
.TP
\f[B]-h\f[R], \f[B]\[en]help\f[R]
Print help output.
.TP
\f[B]-v\f[R], \f[B]\[en]verbose\f[R]
Enable verbose output.
.TP
\f[B]-t PATH\f[R], \f[B]\[en]temp PATH\f[R]
Directory to create any temporary files.
.TP
\f[B]-A\f[R], \f[B]\[en]append\f[R]
Append to an existing AFF4 image specified with \[lq]-o\[rq].
.TP
\f[B]-e PASSWORD\f[R], \f[B]\[en]container_password PASSWORD\f[R]
Password to create an encrypted AFF4 container.
.TP
\f[B]-o OUTPUT_FILE\f[R], \f[B]\[en]output OUTPUT_FILE\f[R]
Output AFF4 file name.
\f[B]\[en]overwrite\f[R]
Overwrite AFF4 file if it already exists.
.TP
\f[B]-m AFF4_IMAGE\f[R], \f[B]\[en]meta AFF4_IMAGE\f[R]
Print the AFF4 image\[cq]s metadata.
.TP
\f[B]-p PLUGIN_NAME\f[R], \f[B]\[en]plugin PLUGIN_NAME\f[R]
Specify a plugin to load, or use \[lq]list\[rq] to list all plugins.
.TP
\f[B]-z\f[R], \f[B]\[en]zip\f[R]
Write to a Zip container instead of AFF4.
.TP
\f[B]-x AFF4_IMAGE\f[R], \f[B]\[en]extract AFF4_IMAGE\f[R]
Extract all files and folders from an AFF4 image.
.SH DEFAULT PLUGINS
.TP
\f[B]android_adb\f[R]
Image an Android device via ADB over USB or over network.
Supports root filesystems.
.TP
\f[B]apple_afc\f[R]
Image a device that support AFC.
Supports jailbroken and non-jailbroken devices.
.TP
\f[B]disk_image\f[R]
Image a file or folder on the local disk.
.TP
\f[B]generic_ftp\f[R]
Image a device via network FTP
.TP
\f[B]generic_http\f[R]
Image a file or folder via http.
.TP
\f[B]generic_smb\f[R]
Image a device via network SMB.
.TP
\f[B]generic_ssh\f[R]
Image a device via network SSH.
.TP
\f[B]ios_ssh\f[R]
Image a jailbroken device via SSH over network or USB.
.TP
\f[B]usb_drive\f[R]
Image a local USB device or mounted drive.
.SH Apple_AFC Plugin
.PP
The \[lq]apple_afc\[rq] plugin allows for creating logical images from
Apple devices using the AFC protocol.
The iPod Touch, iPhone, and Apple Watch are supported.
\[lq]-i\[rq] is used to specify \[lq]AFC\[rq] for non-jailbroken devices
or \[lq]AFC2\[rq] for jailbroken devices with \[lq]Apple File Conduit
2\[rq] installed.
\[lq]-c\[rq] is used to remove all previous pairing records and
\[lq]-k\[rq] is used to initiate pairing before imaging.
.TP
\f[B]-i METHOD\f[R], \f[B]\[en]iOS METHOD\f[R]
Create an image from an iOS device using METHOD.
Jailbroken methods: AFC, AFC2.
Unjailbroken method: AFC.
.TP
\f[B]-c\f[R], \f[B]\[en]clear\f[R]
Clear any pairing records made by Afflux.
.TP
\f[B]-k\f[R], \f[B]\[en]pair\f[R]
Pair or re-pair the device before imaging.
.SH iOS_SSH Plugin
.PP
The \[lq]ios_ssh\[rq] plugin is used to image a Jailbroken device via
SSH protocol.
\[lq]-a\[rq] is used to specify the devices IP address to connect to or
\[lq]-l\[rq] is used for a device connected via USB.
\[lq]-R\[rq] is used to specify the root password if it is known,
default is \[lq]alpine\[rq].
\[lq]-s\[rq] is used to enable traversing symlinks.
.TP
\f[B]-a IP\f[R], \f[B]\[en]address IP\f[R]
IP address to connect to.
.TP
\f[B]-d REMOTE DIR\f[R], \f[B]\[en]directory REMOTE DIR\f[R]
Remote directory to begin imaging.
.TP
\f[B]-l\f[R], \f[B]\[en]local\f[R]
SSH to iOS device via network address instead of USB tunneling.
.TP
\f[B]-R ROOT_PASSWORD\f[R], \f[B]\[en]root-password ROOT_PASSWORD\f[R]
Root password for jailbroken device if using SSH.
Defaults to \[lq]alpine\[rq].
.TP
\f[B]-s\f[R], \f[B]\[en]symlinks\f[R]
Follow and image any symlinks.
.SH Android_ADB Plugin
.PP
The \[lq]android_adb\[rq] plugin allows for imaging an Android device
over the ADB protocol.
\[lq]-a\[rq] is used to specify the \[lq]IP:PORT\[rq] of the device if
it is on the network or \[lq]USB\[rq] if it is connected via USB.
\[lq]-d\[rq] is used to specify the directory to image.
Default directory is \[lq]/\[rq].
Directories that should be ignored can be specified here by placing a
\[lq]-\[rq] after the directory to ignore.
For example, to image \[lq]/\[rq] and ignore \[lq]/proc\[rq] you would
use \[lq]-d / /proc-\[rq].
\[lq]-s\[rq] is used to enable the imaging to traverse symlinks.
And \[lq]-k\[rq] is used to pair or repair the device.
.TP
\f[B]-a USB/IP:PORT\f[R], \f[B]\[en]android USB/IP:PORT\f[R]
Create an image from a connected Android device using ADB.
Method can be USB or via IP.
.TP
\f[B]-d [DIRECTORY [DIRECTORY \&...]]\f[R], \f[B]\[en]directory [DIRECTORY [DIRECTORY \&...]]\f[R]
Directory to image on the device.
.TP
\f[B]-s\f[R], \f[B]\[en]symlinks\f[R]
Follow and image any symlinks.
.TP
\f[B]\[en]root\f[R]
Check and acquire root privileges if possible.
.TP
\f[B]-k\f[R], \f[B]\[en]keygen\f[R]
Regenerate pairing keys for the device.
.TP
\f[B]\[en]timeout\f[R]
ADB timeout amount.
.TP
\f[B]\[en]auth-timeout\f[R]
Timeout for CNXN authentication response.
.SH Generic_SSH Plugin
.PP
The \[lq]generic_ssh\[rq] plugin is used for imaging any device that
supports a network SSH connection.
\[lq]-a\[rq] is used to specify the IP address.
\[lq]-u\[rq] is used to specify the username.
\[lq]-P\[rq] is the user\[cq]s password.
\[lq]-q\[rq] can specify the port.
The default is \[lq]22\[rq].
\[lq]-s\[rq] will enable symlink traversal and \[lq]-d\[rq] is used to
specify a directory to image.
.TP
\f[B]-a IP\f[R], \f[B]\[en]address IP\f[R]
IP address to connect to.
.TP
\f[B]-u USERNAME\f[R], \f[B]\[en]username USERNAME\f[R]
SSH username to connect with.
.TP
\f[B]-P PASSWORD\f[R], \f[B]\[en]password PASSWORD\f[R]
Password for the SSH user.
.TP
\f[B]\[en]port PORT\f[R]
Port to connect over SSH.
.TP
\f[B]-s\f[R], \f[B]\[en]symlinks\f[R]
Follow and image any symlinks.
.TP
\f[B]-r\f[R], \f[B]\[en]recursive\f[R]
Add files and folders recursively.
.TP
\f[B]-d REMOTE DIR\f[R], \f[B]\[en]directory REMOTE DIR\f[R]
Remote directory to begin imaging.
.SH Generic_FTP Plugin
.PP
The \[lq]generic_ftp\[rq] plugin is used for imaging any device that
supports a network FTP connection.
\[lq]-a\[rq] is used to specify the hostname or IP address.
\[lq]-u\[rq] is used to specify the username.
\[lq]-P\[rq] is the user\[cq]s password.
\[lq]-q\[rq] can specify the port.
The default is \[lq]21\[rq].
\[lq]-s\[rq] will enable symlink traversal and \[lq]-d\[rq] is used to
specify a directory to image.
.TP
\f[B]-a IP\f[R], \f[B]\[en]address IP\f[R]
IP address or server name to connect to.
.TP
\f[B]-u USERNAME\f[R], \f[B]\[en]username USERNAME\f[R]
FTP username to connect with.
.TP
\f[B]-P PASSWORD\f[R], \f[B]\[en]password PASSWORD\f[R]
Password for the FTP user.
.TP
\f[B]\[en]port PORT\f[R]
Port to connect over FTP.
.TP
\f[B]-s\f[R], \f[B]\[en]symlinks\f[R]
Follow and image any symlinks.
.TP
\f[B]-r\f[R], \f[B]\[en]recursive\f[R]
Add files and folders recursively.
.TP
\f[B]-d REMOTE_DIR\f[R], \f[B]\[en]directory REMOTE_DIR\f[R]
Remote directory to begin imaging.
.SH USB_Drive Plugin
.PP
The \[lq]usb_drive\[rq] image is used for imaging a USB drive.
Simply add the flash drive name with \[lq]-u\[rq].
.TP
\f[B]-u USB_NAME\f[R], \f[B]\[en]usb USB_NAME\f[R]
Create image from a connected USB device.
.TP
\f[B]-s\f[R], \f[B]\[en]symlinks\f[R]
Follow and image any symlinks.
.TP
\f[B]\[en]timeout\f[R]
FTP connection timeout.
.SH Disk_Image Plugin
.PP
The \[lq]disk_image\[rq] plugin is used to image files or folders on a
disk.
\[lq]-f\[rq] is used to specify a folder.
\[lq]-F\[rq] is used to specify a file.
And again, \[lq]-s\[rq] is used enable symlink traversal.
.TP
\f[B]-f [FOLDER [FOLDER \&...]]\f[R], \f[B]\[en]folder [FOLDER [FOLDER \&...]]\f[R]
Create image from a local folder.
.TP
\f[B]-F [FILE [FILE \&...]]\f[R], \f[B]\[en]file [FILE [FILE \&...]]\f[R]
Create image from a local file or files.
.TP
\f[B]-s\f[R], \f[B]\[en]symlinks\f[R]
Follow and image any symlinks.
.TP
\f[B]-r\f[R], \f[B]\[en]recursive\f[R]
Add files and folders recursively.
.SH Generic_SMB Plugin
.PP
The \[lq]generic_smb\[rq] plugin is used for imaging SMB shares across
systems.
\[lq]-a\[rq] is used to specify the hostname/address for the share.
\[lq]-u\[rq] is the username and \[lq]-P\[rq] is the password.
The port can also be specified to a non-standard SMB port with
\[lq]-p\[rq].
Symlinks can also be traversed with \[lq]-s\[rq].
\[lq]-S\[rq] is used to specify the share directory to image.
.TP
\f[B]-a HOSTNAME\f[R], \f[B]\[en]address HOSTNAME\f[R]
IP address or server name to connect to.
.TP
\f[B]-S SHARE\f[R], \f[B]\[en]share SHARE\f[R]
SMB share for imaging.
.TP
\f[B]-u USERNAME\f[R], \f[B]\[en]username USERNAME\f[R]
SMB username to connect with.
.TP
\f[B]-P PASSWORD\f[R], \f[B]\[en]password PASSWORD\f[R]
Password for the SMB user.
.TP
\f[B]\[en]port PORT\f[R]
Port to connect over SMB.
.TP
\f[B]-s\f[R], \f[B]\[en]symlinks\f[R]
Enable traversing symlinks.
.TP
\f[B]-r\f[R], \f[B]\[en]recursive\f[R]
Add files and folders recursively.
.SH Generic_HTTP Plugin
.PP
The \[lq]generic_http\[rq] plugin is used for imaging HTTP directories.
\[lq]-l\[rq] is used to specify the link or link(s) to image from.
\[lq]-c\[rq] is used to specify the chunk size for the downloads.
\[lq]-r\[rq] applies to this module if you want to image all the HTTP
directories.
.TP
\f[B]-l [LINK [LINK \&...]]\f[R], \f[B]\[en]link [LINK [LINK \&...]]\f[R]
Create image from a link.
.TP
\f[B]-c [CHUNK_SIZE [CHUNK_SIZE \&...]]\f[R], \f[B]\[en]chunk-size [CHUNK_SIZE [CHUNK_SIZE \&...]]\f[R]
Chunk size to download with.
Default is 1024.
.TP
\f[B]-r\f[R], \f[B]\[en]recursive\f[R]
Add files and folders recursively.
.SH EXAMPLES
.TP
\f[B]afflux -p disk_image -f /home -o home.aff4\f[R]
Create an image (\[lq]home.aff4\[rq]) of the \[lq]/home\[rq] directory
on a Linux system.
.TP
\f[B]afflux -p android_adb -a 10.11.1.5:5001 \[en]root -d / /dev- /proc- -o test.aff4 -v\f[R]
Verbosely image an Android phone (\[lq]10.11.1.5\[rq]) over the network
to \[lq]test.aff4\[rq].
Attempt to get root access, start imaging at \[lq]/\[rq] and ignore
\[lq]/dev\[rq] and \[lq]/proc\[rq].
.TP
\f[B]afflux -p ios_ssh -a 10.11.1.7 -o iphone_ssh.aff4\f[R]
Image a jailbroken iPhone (\[lq]10.11.1.7\[rq]) via SSH.
.TP
**afflux -p generic_smb -a WINDEV2210EVAL -S _folder -o test.aff4 -v -u User -P test**
Image an SMB share on a Windows machine.
.SH COPYRIGHT
.PP
Copyright 2020 Andrew Clark.
License GPLv3+: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH AUTHORS
Andrew Clark IV.
